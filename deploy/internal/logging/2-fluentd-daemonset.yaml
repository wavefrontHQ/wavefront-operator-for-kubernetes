apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: wavefront
    app.kubernetes.io/component: logging
  name: wavefront-logging
  namespace: observability-system
  ownerReferences:
    - apiVersion: apps/v1
      kind: Deployment
      name: wavefront-controller-manager
      uid: {{ .ControllerManagerUID }}
spec:
  selector:
    matchLabels:
      name: wavefront-logging
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
  template:
    metadata:
      annotations:
        proxy-available-replicas: "{{ .DataExport.WavefrontProxy.AvailableReplicas }}"
        configHash: "{{ .DataCollection.Logging.ConfigHash }}"
      labels:
        name: wavefront-logging
        app.kubernetes.io/name: wavefront
        app.kubernetes.io/component: logging
    spec:
      serviceAccount: wavefront-logging
      serviceAccountName: wavefront-logging
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: fluentd-wf
          image: projects.registry.vmware.com/tanzu_observability/kubernetes-operator-fluentd:1.0.3-1.15.2
          command: ["fluentd", "--config", "/etc/fluentd/fluentd.conf", "--no-supervisor", "--quiet"]
          env:
            - name:  K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name:  CLUSTER_NAME
              value: {{.ClusterName}}
          resources:
{{ .DataCollection.Logging.Resources | toYaml | indent 12 }}
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlogcontainers
              mountPath: /var/log/containers
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: config-volume
              mountPath: /etc/fluentd
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: config-volume
          configMap:
            name: wavefront-logging-config
        - name: wf-fluent-volume
          emptyDir: {}
        - name: var-logsx1
          emptyDir: {}