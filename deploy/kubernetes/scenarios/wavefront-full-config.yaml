# Need to change YOUR_CLUSTER_NAME and YOUR_WAVEFRONT_URL accordingly
# This is not a valid configuration since some options are not compatible. See notes for more information.
apiVersion: wavefront.com/v1alpha1
kind: Wavefront
metadata:
  name: wavefront
  namespace: wavefront
spec:
  clusterName: YOUR_CLUSTER_NAME
  wavefrontUrl: YOUR_WAVEFRONT_URL
  wavefrontTokenSecret: wavefront-secret
  dataCollection:
    metrics:
      enable: true
      # Note on Custom Configuration Precedence
      #
      # customConfig will override all top-level config except clusterCollector and nodeCollector
      customConfig: wavefront-collector-config
      filters:
        allowList:
          - kubernetes.*
        denyList:
          - kubernetes.sys_container.*
          - kubernetes.collector.runtime.*
      defaultCollectionInterval: 90s #defaults to 60s
      enableDiscovery: true #defaults to true
      clusterCollector:
        resources:
          requests:
            cpu: 200m
            memory: 10Mi
          limits:
            cpu: 400m
            memory: 512Mi
      nodeCollector:
        resources:
          requests:
            cpu: 200m
            memory: 10Mi
          limits:
            cpu: 200m
            memory: 256Mi
  dataExport:
    # Note on externalWavefrontProxy and wavefrontProxy
    #
    # It is not valid to define an external proxy (externalWavefrontProxy.url) and
    # enable the wavefront proxy (wavefrontProxy.enable) in your Kubernetes cluster
    externalWavefrontProxy:
      url: YOUR_EXTERNAL_PROXY_URL
    wavefrontProxy:
      enable: true
        metricPort: 2878
        preprocessor: advanced-proxy-preprocessor-rules
        resources:
          requests:
            cpu: 200m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 3Gi
        tracing:
          wavefront:
            port: 30000
            samplingRate: "0.1"
            samplingDuration: 100
          zipkin:
            port: 9411
            applicationName: "zipkin"
          jaeger:
            port: 30001
            httpPort: 30080
            grpcPort: 14250
            applicationName: "jaeger"
        histogram:
          port: 40000
          minutePort: 40001
          hourPort: 40002
          dayPort: 40003
        httpProxy:
          secret: http-proxy-secret
        # Note on Proxy Configuration Precedence
        #
        # Most wavefront proxy configuration options should be available via explicit fields in the custom resource.
        # It is our recommendation to use those fields. However, it is also possible to specify options as proxy command
        # line parameters in the `dataExport.wavefrontProxy.args` field. If both are used, the operator will allow it at
        # this time, but the custom resource field will take precedence.
        #
        # For example, if you specify `--histogramDistListenerPorts 40123` in `dataExport.wavefrontProxy.args`
        #  and `dataExport.wavefrontProxy.histogram.port: 40000`,
        #  `dataExport.wavefrontProxy.histogram.port: 40000` will take precedence.
        args: >
          --customSourceTags mySource
          --prefix=dev
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name : wavefront
    app.kubernetes.io/component: collector
  name: wavefront-collector-config
  namespace: wavefront
data:
  config.yaml: |
    clusterName: YOUR_CLUSTER_NAME
    enableDiscovery: true
    enableEvents: false
    defaultCollectionInterval: 60s

    sinks:
    - proxyAddress: wavefront-proxy:2878
      filters:
        metricDenyList:
        - kubernetes.sys_container.*
        - kubernetes.collector.runtime.*
        - kubernetes.*.network.rx_rate
        - kubernetes.*.network.rx_errors_rate
        - kubernetes.*.network.tx_rate
        - kubernetes.*.network.tx_errors_rate
        - kubernetes.*.memory.page_faults
        - kubernetes.*.memory.page_faults_rate
        - kubernetes.*.memory.major_page_faults
        - kubernetes.*.memory.major_page_faults_rate
        - kubernetes.*.filesystem.inodes
        - kubernetes.*.filesystem.inodes_free
        - kubernetes.*.ephemeral_storage.request
        - kubernetes.*.ephemeral_storage.limit
        tagExclude:
        - label?controller?revision*
        - label?pod?template*
        - annotation_kubectl_kubernetes_io_last_applied_configuration

    sources:
      kubernetes_source:
        url: https://kubernetes.default.svc
        kubeletPort: 10250
        kubeletHttps: true
        useServiceAccount: true
        insecure: true
        prefix: kubernetes.
        filters:
          metricDenyList:
          - 'kubernetes.sys_container.*'
          - 'kubernetes.node.ephemeral_storage.*'

      internal_stats_source:
        prefix: kubernetes.
      kubernetes_state_source:
        prefix: kubernetes.

      kubernetes_control_plane_source:
        collection:
          interval: 120s

    discovery:
      enable_runtime_plugins: true

      plugins:
      # auto-discover kube DNS
      - name: kube-dns-discovery
        type: prometheus
        selectors:
          images:
          - '*kube-dns/sidecar*'
          labels:
            k8s-app:
            - kube-dns
        port: 10054
        path: /metrics
        scheme: http
        prefix: kube.dns.
        filters:
          metricAllowList:
          - 'kube.dns.http.request.duration.microseconds'
          - 'kube.dns.http.request.size.bytes'
          - 'kube.dns.http.requests.total.counter'
          - 'kube.dns.http.response.size.bytes'
          - 'kube.dns.kubedns.dnsmasq.*'
          - 'kube.dns.process.*'

      # auto-discover coredns
      - name: coredns-discovery
        type: prometheus
        selectors:
          images:
          - '*coredns:*'
          labels:
            k8s-app:
            - kube-dns
        port: 9153
        path: /metrics
        scheme: http
        prefix: kube.coredns.
        filters:
          metricAllowList:
          - 'kube.coredns.coredns.cache.*'
          - 'kube.coredns.coredns.dns.request.count.total.counter'
          - 'kube.coredns.coredns.dns.request.duration.seconds'
          - 'kube.coredns.coredns.dns.request.size.bytes'
          - 'kube.coredns.coredns.dns.request.type.count.total.counter'
          - 'kube.coredns.coredns.dns.response.rcode.count.total.counter'
          - 'kube.coredns.coredns.dns.response.size.bytes'
          - 'kube.coredns.process.*'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: advanced-proxy-preprocessor-rules
  namespace: wavefront
data:
  rules.yaml: |
    '2878':
      - rule: tag-all-metrics-processed
        action: addTag
        tag: processed
        value: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: http-proxy-secret
  namespace: wavefront
type: Opaque
stringData:
  http-url: YOUR_HTTP_PROXY_URL #i.e. http://10.96.179.49:8080
  #  basic-auth-username: YOUR_HTTP_PROXY_BASIC_AUTH_USERNAME
  #  basic-auth-password: YOUR_HTTP_PROXY__BASIC_AUTH_PASSWORD
  tls-root-ca-bundle: |
    YOUR_HTTP_PROXY_CA_CERTIFICATE